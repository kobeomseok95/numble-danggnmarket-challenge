# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      run: ./gradlew clean build -Pjasypt.encryptor.password=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}
    - name: Get current time
      uses: 1466587594/get-current-time@v2
      id: current-time
      with:
        format: YYYY-MM-DDTHH-mm-ss
        utcOffset: "+09:00"
    - name: Make Directory for Deliver
      run: mkdir deploy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/
    - name: Copy .ebextensions
      run: cp -r .ebextensions ./deploy/
    - name: Copy Procfile
      run: cp Procfile ./deploy/
#    - name: Copy appspec
#      run: cp appspec.yml ./deploy/
#    - name: Copy shell
#      run: cp ./scripts/* ./deploy/
    - name: Make Zip File
      run: zip -r -qq -j ./app.zip ./deploy
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: danggnmarket
        environment_name: danggnmarket-dev-env
        version_label: Github Action-${{steps.current-time.outputs.formattedTime}}
        region: ap-northeast-2
        deployment_package: deploy/app.zip
        wait_for_environment_recovery: 180

#    S3, CodeDeploy 과정 제외
#    - name: Deliver to AWS S3
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      run: |
#        aws s3 cp \
#        --region ap-northeast-2 \
#        ./app.zip s3://danggnmarket-challenge-bucket/build/
#    - name: Deploy
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      run: |
#        aws deploy create-deployment \
#        --application-name danggnmarket-challenge \
#        --deployment-group-name danggnmarket-challenge-deploy \
#        --file-exists-behavior OVERWRITE \
#        --s3-location bucket=danggnmarket-challenge-bucket,bundleType=zip,key=build/app.zip \
#        --region ap-northeast-2